/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package securedocumentsgeneratorlab2;

import Crypto.Chiffrement;
import Crypto.Cle;
import Crypto.CryptoManager;
import Crypto.Service;
import Utils.FichierConfig;
import java.io.IOException;
import java.security.Security;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author bobmastrolilli
 */
public class SDG extends javax.swing.JFrame {

     ManipFichierCrypto mp ;
     /****** OBJET CRYPTOGRAPHIQUE POUR CHIFFREMENT CAESAR *******/
     Service service1; 
     Cle cle1; 
     CryptoManager cm1;
     Chiffrement chif1; 
     
     /****** OBJET CRYPTOGRAPHIQUE POUR CHIFFREMENT VIGENERE *******/
     Service service2; 
     Cle cle2; 
     CryptoManager cm2 = new CryptoManager(); 
     Chiffrement chif2; 
    /**
     * Creates new form SDG
     */
    public SDG() throws IOException 
    {
         try {
             initComponents();
             mp  = new ManipFichierCrypto();
             /****** OBJET CRYPTOGRAPHIQUE POUR CHIFFREMENT CAESAR *******/
             cm1 = new CryptoManager();
             service1 = cm1.newInstance(FichierConfig.getPropertyProviderClass("Triumvirat")); // on obtient en fonction de TriumVirat, le chemin de la class (Crypto.Triumvirat)
             cle1 = cm1.genereCle("Caesar"); // on obtient une clé classe CleCaesar
             cle1 = service1.generateKey(128);
             chif1 = (Chiffrement)service1;
             chif1.init(cle1);
             
             /****** OBJET CRYPTOGRAPHIQUE POUR CHIFFREMENT VIGENERE *******/
             cm2 = new CryptoManager();
             service2 = cm2.newInstance(FichierConfig.getPropertyProviderClass("Vigenere")); // on obtient en fonction de TriumVirat, le chemin de la class (Crypto.Triumvirat)
             cle2 = cm2.genereCle("Vigenere"); // on obtient une clé classe CleCaesar
             cle2 = service2.generateKey(128);
             chif2 = (Chiffrement)service2;
             chif2.init(cle2);
             

             
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(SDG.class.getName()).log(Level.SEVERE, null, ex);
         } catch (InstantiationException ex) {
             Logger.getLogger(SDG.class.getName()).log(Level.SEVERE, null, ex);
         } catch (IllegalAccessException ex) {
             Logger.getLogger(SDG.class.getName()).log(Level.SEVERE, null, ex);
         }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        RB_CRYPT = new javax.swing.JRadioButton();
        RB_CAESAR = new javax.swing.JRadioButton();
        RB_VIGENERE = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        RB_DECRYPT = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Wawati TC", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("Secure documents generator");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(RB_CRYPT);
        RB_CRYPT.setSelected(true);
        RB_CRYPT.setText("Crypt");

        buttonGroup2.add(RB_CAESAR);
        RB_CAESAR.setSelected(true);
        RB_CAESAR.setText("Caesar");

        buttonGroup2.add(RB_VIGENERE);
        RB_VIGENERE.setText("Vigenere");

        jSeparator1.setForeground(new java.awt.Color(102, 102, 102));

        buttonGroup1.add(RB_DECRYPT);
        RB_DECRYPT.setText("Decrypt");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(RB_CAESAR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB_VIGENERE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(RB_CRYPT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RB_DECRYPT))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RB_CRYPT)
                            .addComponent(RB_DECRYPT))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RB_CAESAR)
                            .addComponent(RB_VIGENERE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
         try {
             System.out.println("path = " + jFileChooser1.getSelectedFile().getAbsolutePath());
             
              
             //String txt ="BOBI";
             
             
             
             String Cipher = ""; //byte
             String Cipher2 = null; //byte
             if(RB_CRYPT.isSelected())
             {
                 String txt = ManipFichierCrypto.LireFichier(jFileChooser1.getSelectedFile().getAbsolutePath());
                 System.out.println("Message clair    : " + txt.trim());
                 //txt.substring(0,txt.length()-1); // pour retirer le dernier espace !
                 if(RB_CAESAR.isSelected())
                 {
                    Cipher = (String) chif1.crypte(txt);
                    System.out.println("Message crypté   :"+ Cipher);
                    RB_VIGENERE.setEnabled(false);
                    ManipFichierCrypto.WriteToCipherFile(Cipher);
                 }
                 else if(RB_VIGENERE.isSelected())
                 {
                    Cipher2 = (String) chif2.crypte(txt);
                    System.out.println("Message crypté   : " + Cipher2);
                    RB_CAESAR.setEnabled(false);
                    ManipFichierCrypto.WriteToCipherFile(Cipher2);
                 }
                 
                
             }
             if(RB_DECRYPT.isSelected())
             {
                  String txt = ManipFichierCrypto.LireFichier("/Users/bobmastrolilli/Desktop/lab2/testc.txt");
                  
 
                    System.out.println("Message clair    : " + txt.trim());
                 System.out.println("yooo");
                 if(RB_CAESAR.isSelected())
                 {
                    Cipher = (String) chif1.decrypt(txt);
                    System.out.println("Message decrypté   :"+ Cipher);
                    RB_VIGENERE.setEnabled(true);
                    ManipFichierCrypto.WriteToCipherFile(Cipher);
                 }
                 else if(RB_VIGENERE.isSelected())
                 {
                    Cipher2 = (String) chif2.decrypt(txt);
                    System.out.println("Message decrypté   : " + Cipher2);
                    RB_CAESAR.setEnabled(true);
                    ManipFichierCrypto.WriteToCipherFile(Cipher2);
                 }
                 
                
             }
             
             
             
             
             
             
         } catch (IOException ex) {
             Logger.getLogger(SDG.class.getName()).log(Level.SEVERE, null, ex);
         }
      
            
            
            
          
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Macintosh".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SDG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SDG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SDG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SDG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SDG().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(SDG.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RB_CAESAR;
    private javax.swing.JRadioButton RB_CRYPT;
    private javax.swing.JRadioButton RB_DECRYPT;
    private javax.swing.JRadioButton RB_VIGENERE;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
